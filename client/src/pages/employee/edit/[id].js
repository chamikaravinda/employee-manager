import Head from 'next/head';
import styles from '@/styles/Employee.addEdit.module.css'
import Button from '@mui/material/Button';
import { Link, Grid } from '@mui/material';
import EmployeeForm from '@/components/employee.form';
import axios from 'axios';

export const getStaticPaths = async () => {
  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/employees`);
  const data = await res.json();

  const paths = data.map( employee => {
      return {
          params: {id: employee.id.toString()}
      }
  })

  return {
      paths,
      fallback: false,
  }
}

export const getStaticProps = async (context) => {
  const id = context.params.id;
  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/employees/`+id);
  const data = await res.json();
  return {
      props: {employee: data}
  }
}

export default function EditEmployee({employee}) {

  const [state, setState] = useState({
    isOpenNotification: false,
    message: "",
    severity: "info",
  });

  const { message, severity, isOpenNotification } = state;

  
  function editEmployee(employee){
    axios.put(`${process.env.NEXT_PUBLIC_API_URL}/employees/${employee.id}`, employee)
    .then(function (response) {
      setState({
        isOpenNotification: true,
        message: "Update employee success",
        severity: "success",
      });
    })
    .catch(function (error) {
      console.log(error);
      setState({
        isOpenNotification: true,
        message: "Error in updating the employee",
        severity: "error",
      });
    });
  }

  const handleClose = () => {
    setState({
      isOpenNotification: false,
      message: "",
      severity: "info",
    });  
  };

  return (
    <>
      <Head>
        <title>Employee Manager | Edit</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <Grid container spacing={2}>
          <Grid lg={10}>
          </Grid>
          <Grid lg={2}>
            <Link href="/employee/list">
                <Button variant="contained" className={styles.btnAddEmployee}>List View</Button>
            </Link>
          </Grid>
        </Grid>
        <Grid container columns={12} >
          <Grid lg={4} md={3}>
          </Grid>
          <Grid lg={4} md={6} className={styles.form}>
            <EmployeeForm action={"Save"} actionFunction={editEmployee} data={employee}/>
          </Grid>
        </Grid>
        <Snackbar 
          open={isOpenNotification} 
          anchorOrigin={{
            vertical: 'top',
            horizontal: 'left',
          }}
          autoHideDuration={6000} 
          onClose={handleClose}
        >
          <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>
            {message}
          </Alert>
        </Snackbar>
      </main>
    </>
  )
}